name: Check GitHub Releases and Upload to S3

on:
  workflow_dispatch: # Allows manual triggering

jobs:
  check_and_upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install requests packaging

      - name: Run Release Check Script
        id: run_python_script
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: python check_releases.py

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
            aws-region: ap-south-1

      - name: Upload Release File to S3
        run: |
          BUCKET_NAME="myawsbucket9660551704"
          AWS_REGION="ap-south-1"
          LOCAL_REPORT_FILE="latest_report.md"

          # Get the list of existing release files in S3
          S3_FILES=$(aws s3 ls s3://$BUCKET_NAME/ --region $AWS_REGION | grep -E '^release_[0-9]+\.txt$' | awk '{print $4}' | sort -V)
          LAST_S3_FILE=$(echo "$S3_FILES" | tail -n 1)

          CHANGES_DETECTED="true" # Assume changes until proven otherwise

          if [ -n "$LAST_S3_FILE" ]; then
              echo "Downloading last uploaded file from S3: $LAST_S3_FILE"
              aws s3 cp "s3://$BUCKET_NAME/$LAST_S3_FILE" "last_s3_report.md" --region $AWS_REGION

              echo "Comparing local report with last S3 report..."
              if diff -q "$LOCAL_REPORT_FILE" "last_s3_report.md" >/dev/null; then
                  echo "No new information found. Everything is up-to-date."
                  CHANGES_DETECTED="false"
              else
                  echo "New information detected. Proceeding with upload."
              fi
              rm "last_s3_report.md" # Clean up downloaded file
          else
              echo "No previous release files found in S3. Proceeding with initial upload."
          fi

          if [ "$CHANGES_DETECTED" == "true" ]; then
              echo "Counting existing .txt files in bucket..."
              count=$(echo "$S3_FILES" | wc -l) # Use the already fetched list
              new_version=$((count + 1))
              new_filename="release_${new_version}.txt"

              echo "Uploading $LOCAL_REPORT_FILE to S3 as $new_filename..."
              aws s3 cp "$LOCAL_REPORT_FILE" "s3://$BUCKET_NAME/$new_filename" --region $AWS_REGION

              echo "Done. Uploaded $new_filename to S3."
          fi
