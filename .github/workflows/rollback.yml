name: EC2 Rollback (Password Auth)

on:
  workflow_dispatch:
    inputs:
      version_number:
        description: 'The version NUMBER to roll back to (e.g., enter 5 for release_5.txt)'
        required: true
        type: number

jobs:
  rollback_on_ec2:
    name: Trigger Rollback on EC2 Server
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Download specified release file from S3
        id: download_file
        run: |
          VERSION=${{ github.event.inputs.version_number }}
          BUCKET_NAME="myawsbucket9660551704"
          FILE_NAME="release_${VERSION}.txt"
          
          echo "Downloading s3://${BUCKET_NAME}/${FILE_NAME}..."
          aws s3 cp "s3://${BUCKET_NAME}/${FILE_NAME}" "./${FILE_NAME}"
          
          if [ $? -ne 0 ]; then
            echo "::error::Failed to download ${FILE_NAME}. Check if version number is correct."
            exit 1
          fi
          
          echo "Downloaded ${FILE_NAME} successfully."
          echo "release_file=${FILE_NAME}" >> $GITHUB_OUTPUT

      - name: Copy Release File to EC2 Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          password: ${{ secrets.EC2_PASSWORD }}
          port: 22
          source: "./${{ steps.download_file.outputs.release_file }}"
          target: "/tmp/" # The file will be placed in the /tmp directory

      - name: Execute Rollback Script on EC2 Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          password: ${{ secrets.EC2_PASSWORD }}
          port: 22
          script: |
            RELEASE_FILE_ON_SERVER="/tmp/${{ steps.download_file.outputs.release_file }}"
            echo "Executing rollback script on server..."
            bash ~/rollback.sh ${RELEASE_FILE_ON_SERVER}

      - name: Rollback Triggered
        run: echo "âœ… Rollback command for version ${{ github.event.inputs.version_number }} has been successfully sent to the EC2 server."
